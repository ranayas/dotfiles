#
# wm independent hotkeys
#

# terminal emulator
super + Return
	termite

#tilix --maximize --window-style=borderless
# program launcher
super + @space
	rofi -show drun

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift +}{h,j,k,l}
	if [ "$(bspc query -N -n focused.tiled)" ]; then \
		bspc node -{f,s} {west,south,north,east}.tiled; \
	fi

# switch between floating or tiled nodes
super + shift + space
	if [ "$(bspc query -N -n focused.floating)" ]; then \
		bspc node -f next.local.tiled; \
	else \
		bspc node -f next.local.floating; \
	fi

super + {_,shift + }c
	if [ "$(bspc query -N -n focused.floating)" ]; then \
		bspc node -f {next,prev}.local.floating; \
	else \
		bspc node -f {next,prev}.local.tiled; \
	fi

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
#super + {_,shift + }c
	#bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# parent
super + ctrl + r
	bspc node @parent -R 90

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + ctrl + alt + {h,j,k,l}
	bspc node -v {-36 0,0 36,0 -36,36 0}


# lock screen
ctrl + alt + l
	i3lock -c 000000 && sleep 5 && xset s activate

Print
	scrot -q 100 $HOME/'Imágenes/screenshots/%Y-%m-%d_%H%M%S-$wx$h_scrot.png'

ctrl + Print
	sleep 0.2; \
	scrot -q 100 -a $(slop -f '%x,%y,%w,%h') /tmp/temp_scrot_screenshot.png && \
	xclip -selection clipboard -t image/png -i /tmp/temp_scrot_screenshot.png && \
	rm /tmp/temp_scrot_screenshot.png

# ctrl + Print
# 	sleep 0.2; \
# 	scrot -q 100 -a $(slop -f '%x,%y,%w,%h') $HOME/'Imágenes/screenshots/%Y-%m-%d_%H%M%S-$wx$h_scrot.png'
